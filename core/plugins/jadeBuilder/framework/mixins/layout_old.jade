mixin table(bg, width, align, textAlign, padding)
	- var margin;
	- typesetting = width || typesetting;
	if align == 'center' || !align
		- margin = '0 auto';
	else if align == 'left'
		- margin = '0 auto 0 0';
	else if align == 'right'
		- margin = '0 0 auto 0';
	table.t(
	width=width || letter.width
	align=align || 'left'
	bgcolor=bg || 'none'
	cellspacing=0
	cellpadding=padding || 0
	color=font.color
	style='color:#{font.color};border:0;text-align:#{textAlign||"left"};padding:#{padding || 0};margin:#{margin};background:#{bg||"none"};border-collapse:separate;'
	)
		block


mixin wrap(valign, lineHeight, height)
	tr: td(valign=valign || false, height=height, style='mso-line-height-rule:exactly;line-height:' + getLineHeight(lineHeight||font.size) + 'px;'): block



mixin pdl(bg, width, img, valign, pad)
	- typesetting = width || typesetting;
	- width = width || size.letter;
	+wrap: +table(bg || color.layout, width || size.letter, 'center', 'left'): tr
		td(width=img[0]['size'][0]): +img(img[0]['src'], img[0]['size'][0], img[0]['size'][1])
		td(width=(width - img[0]['size'][0] - img[1]['size'][0]), valign=valign || 'top')
			+table('none', width - img[0]['size'][0] - img[1]['size'][0], 'center'): tr
				if (pad)
					td(width=size.textPad): +img('spacer.gif', size.textPad, 'auto')
				td: block
				if (pad)
					td(width=size.textPad): +img('spacer.gif', size.textPad, 'auto')
		td(width=img[1]['size'][0]): +img(img[1]['src'], img[1]['size'][0], img[1]['size'][1])


mixin img(src, width, height, alt, title)
	- src = convertImgSrc(src);
	img(
	width=width,
	height=height,
	src=src,
	border=0,
	style='display:block;-webkit-user-select:none;-moz-user-select:none;user-select:none;',
	draggable="false",
	alt!=alt,
	title!=title
	)


mixin btn(url, src, width, height, alt, title)
	a(href=_lc(url), border=0, style='display:block;height:'+height+';mso-line-height-rule:exactly;line-height:'+height+'px;'): +img(src, width, height, alt, title)


- var vmlImage = 0;
mixin vmlBg(image, width, height, attr)
	- var attr = attr || {}, image = convertImgSrc(image);
	+if('(gte mso 9)|(vml)')
		div(style="position:relative;")
			v:rect(xmlns:v='urn:schemas-microsoft-com:vml', width=width, height=height, strokecolor='none', strokeweight='0', style="position:absolute;top:0;left:0;z-index: -1;width:#{width||size.letter}px;height:#{height||'auto'}px;padding:0;margin:0;padding-left:0;margin-left:0;")
				v:fill(xmlns:v='urn:schemas-microsoft-com:vml', type='tile', size='#{width||size.layout}px, #{height + "px"||"auto"}' src=image, color='none')
			v:shape(
				xmlns:v='urn:schemas-microsoft-com:vml'
				id=project.ambiance + project.key + '_' + vmlImage + '_shape'
				style="position:absolute;top:0;left:0;padding:0;margin:0;padding-left:0;margin-left:0;"
				)
				+unless('(gte mso 9)|(vml)'): block

			//-v:imagedata(
				xmlns:v='urn:schemas-microsoft-com:vml'
				id=project.ambiance + project.key + '_' + vmlImage + '_image'
				style="position:absolute;top:0;left:0;width:#{width||size.letter}px;height:#{height||'auto'}px;padding:0;margin:0;padding-left:0;margin-left:0;"
				src=image)


mixin fillRow(image, width, height, attr)
		td(width=width, height=height, valign='top')&attributes(bgAttrParser(image, attr))
			+vmlBg(image, width, height): block


