
include framework/mixins



//- Unstable mixins

//-     Mixin for image background under text
//-     @type {object} - accept 4 parameters:
//-         @type[0] {String} - type of overlayed image (can be 'gradient' or 'image') (default Null)
//-         if @type[0] is 'gradient'
//-            @type[1] [Object] - object of 2 colors (only in hex triplet) (default ['#ffffff', '#000000'])
//-            @type[2] [String] - gradient method (can be 'radial', 'linear') (default 'linear')
//-            @type[3] [Integer] - gradient angle (must be in range of -359 and 359) (default 0)
//-         if @type[0] is image
//-            @type[1] {String} - path to background image (relative or full path) (default Null)
//-            @type[2] {String} - scale method ('fill', 'tile') (default 'fill')
//-            @type[3] {String} - backup bg color (only in hex triplet) (default '#ffffff')
//-     @width {Integer} - width of element
//-     @height {Integer} - height of element
//-     Example for use:
//-         +background(['gradient', ['#00ff00, #ff0000'], 'linear', '45'], 100, 100)
//-         +background(['image', 'http://example.com/image.jpg', 'fill', '#000000'], 100, 100)
mixin background(type, width, height)
	- typesetting = width || typesetting;
	- console.log('background', typesetting);
	- var gradientType, gradientCssType, imageType, colors, color1, color2, backupColor, angle, src, fill, style='', background=1, prefixes=false/*['-webkit-','-khtml-','-moz-','-ms','-o-']*/;
	if typeof type == 'object'
		if (type[0] == 'gradient')
			if (type[2] == 'linear')
				- gradientType = 'gradient';
				- gradientCssType = 'linear-gradient';
			else if (type[2] == 'radial')
				- gradientType = 'gradientradial';
				- gradientCssType = 'radial-gradient';
			else
				- console.log('background#'+background, 'Unexpected type of gradient');
			- angle = type[3]||0;
			- colors = type[1]||['#ffffff', '#000000'];
			if typeof colors == 'object' && colors.length == 2
				- color1 = colors[0];
				- color2 = colors[1];
			else
				- console.log('background#'+background, 'Unexpected array of colors')
			- for(var i = 0; i < prefixes.length; i++) {
			- style += prefixes[i]+'background-image:'+gradientCssType+'('+angle+'deg, '+ color1 +', '+ color2+');';
			- }
		else if (type[0] == 'image')
			- src = type[1]
			if(src.match('http://') || src.match('https://'))
				- src = src;
			else
				- src = path + src;
			- fill = type[2]||'fill'
			if (fill == 'fill')
				- imageType = 'frame';
			else if (fill == 'tile')
				- imageType = 'tile';
			- backupColor = type[3];
			if(prefixes)
				- for(var i = 0; i < prefixes.length; i++) {
				- style += prefixes[i]+'background-image: url('+src+');';
				- style += prefixes[i]+'background-position: center;';
				if (fill == 'fill')
				- style += prefixes[i]+'background-size: 100% 100%;';
				- style += prefixes[i]+'background-repeat: no-repeat;';
				- }
			- style += 'background-image: url('+src+');';
			- style += 'background-position: center;';
			if (fill == 'fill')
				- style += 'background-size: 100% 100%;';
				- style += 'background-repeat: no-repeat;';
		else
			- console.log('background#'+background, 'Wrong type data in background mixin');
		if (type[0] == 'gradient')
			td(style='background-image: linear-gradient();', background=image width=width height=height)
				| <!--[if gte mso 9]>
				v:rect(width=width, height=height, style='position:absolute;width:#{width}px;height:#{height}px;', strokecolor='none')
					v:fill(type=gradientType, color=color1, color2=color2)
				| <v:shape id="overlay-#{background++}" style="position:absolute;width:#{width}px;height:#{height}px;"><![endif]-->
				block
				| <!--[if gte mso 9]></v:shape><![endif]-->
		else if (type[0] == 'image')
			td(style=style, background=image width=width height=height)
				| <!--[if gte mso 9]>
				v:rect(width=width, height=height, style='position:absolute;width:#{width}px;height:#{height}px;', strokecolor='none')
					v:fill(type=imageType, color=backupColor, src=src)
				| <v:shape id="overlay-#{background++}" style="position:absolute;width:#{width}px;height:#{height}px;"><![endif]-->
				block
				| <!--[if gte mso 9]></v:shape><![endif]-->

mixin emailNotice(wrapType)
	- var wrapType = wrapType.toLowerCase();
	- var id = 'emailNotice';
	script.
		document.addEventListener("DOMContentLoaded", function () {
			var noticeNode = document.getElementById('#{id}');
			noticeNode.parentNode.removeChild(noticeNode);
		});
	if (wrapType === 'cell')
		td(id=id, align='center')
			+font(2) Если у Вас неправильно отображается письмо, то Вы можете открыть его в#{' '}
				+link(link.body, 2, font.color) отдельном окне
				| .
	else if (wrapType === 'row')
		tr(id=id): td(align='center')
			+font(2) Если у Вас неправильно отображается письмо, то Вы можете открыть его в#{' '}
				+link(link.body, 2, font.color) отдельном окне
				| .
	else if (wrapType === 'paragraph')
		p(id=id)
			+font(2) Если у Вас неправильно отображается письмо, то Вы можете открыть его в#{' '}
				+link(link.body, 2, font.color) отдельном окне
				| .
	else if (wrapType === 'raw')
		span(id=id)
			+font(2) Если у Вас неправильно отображается письмо, то Вы можете открыть его в#{' '}
				+link(link.body, 2, font.color) отдельном окне
				| .
	else
		span(id=id)
			+font(2) Если у Вас неправильно отображается письмо, то Вы можете открыть его в#{' '}
				+link(link.body, 2, font.color) отдельном окне
				| .

- var overlay = 0;
mixin overlay(bgcolor, image, width, height, tiled, valign)
	- typesetting = width || typesetting;
	if(image.match('http://') || image.match('https://'))
		- image = image;
	else
		- image = path + image;
	- var cssRepeat = tiled?'repeat':'no-repeat';
	td(id='overlay-#{++overlay}', style='background-color:#{bgcolor};background-image:url(#{image});background-repeat:#{cssRepeat};#{font.color ? "color: " + font.color : ""}', valign=valign || 'top', bgcolor=bgcolor, background=image, color=font.color || false, width=width, height=height)
		+if('gte mso 9')
			v:rect(xmlns:v='urn:schemas-microsoft-com:vml', style='position:absolute;top:0;left:0;width:#{width}px;height:#{height}px;', strokecolor='none')
				v:fill(xmlns:v='urn:schemas-microsoft-com:vml', type=tiled ? 'tile' : 'solid', src=image)
			v:shape(xmlns:v='urn:schemas-microsoft-com:vml', id='overlay-#{overlay}', style='position:absolute;width:#{width}px;height:#{height}px;')
				+unless('gte mso 9'): block